"""
–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –±–æ—Ç–∞
"""

from typing import Dict, List, Tuple, Optional
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db import (
    get_referral_stats, get_referral_link, process_referral, 
    process_subscription_referral, get_referral_leaderboard, has_referrer
)
from logger import bot_logger

class ReferralSystem:
    """–°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    
    COMMISSION_RATE = 0.5  # 50% –∫–æ–º–∏—Å—Å–∏—è
    SUBSCRIPTION_PRICE = 169.0  # –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏
    
    def __init__(self):
        self.bot_username = "elysia_ai_bot"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π username –±–æ—Ç–∞
    
    async def get_referral_info(self, user_id: int) -> Dict:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        stats = await get_referral_stats(user_id)
        referral_link = await get_referral_link(user_id)
        
        return {
            'stats': stats,
            'link': referral_link,
            'commission_rate': self.COMMISSION_RATE,
            'subscription_price': self.SUBSCRIPTION_PRICE
        }
    
    async def create_referral_keyboard(self, user_id: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        stats = await get_referral_stats(user_id)
        
        buttons = [
            [InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="referral_stats")],
            [InlineKeyboardButton(text="üîó –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data="copy_referral_link")],
            [InlineKeyboardButton(text="üèÜ –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤", callback_data="referral_leaderboard")],
            [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="referral_help")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    async def get_referral_stats_text(self, user_id: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
        stats = await get_referral_stats(user_id)
        referral_link = await get_referral_link(user_id)
        
        text = f"üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏\n\n"
        text += f"üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {stats['total_referrals']}\n"
        text += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats['active_referrals']}\n"
        text += f"‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['total_earnings']:.2f} ‚ÇΩ\n\n"
        
        if stats['last_commission_at']:
            text += f"üí∏ –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∏—Å—Å–∏—è: {stats['last_commission_at']}\n\n"
        
        text += f"üîó –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
        text += f"`{referral_link}`\n\n"
        text += f"üí° –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É, —Ç—ã –ø–æ–ª—É—á–∏—à—å {self.COMMISSION_RATE * 100}% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏ ({self.SUBSCRIPTION_PRICE * self.COMMISSION_RATE:.2f} ‚ÇΩ)!"
        
        return text
    
    async def get_leaderboard_text(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Ç–æ–ø–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤"""
        leaderboard = await get_referral_leaderboard(10)
        
        text = "üèÜ –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤\n\n"
        
        if not leaderboard:
            text += "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö üòî\n"
            text += "–°—Ç–∞–Ω—å –ø–µ—Ä–≤—ã–º!"
        else:
            for i, (user_id, username, referrals, earnings) in enumerate(leaderboard, 1):
                username_display = f"@{username}" if username else f"ID: {user_id}"
                text += f"{i}. {username_display}\n"
                text += f"   üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referrals} | üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {earnings:.2f} ‚ÇΩ\n\n"
        
        return text
    
    async def get_help_text(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ"""
        text = "‚ùì –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞?\n\n"
        text += "1Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É\n"
        text += "2Ô∏è‚É£ –ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏\n"
        text += "3Ô∏è‚É£ –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É\n"
        text += "4Ô∏è‚É£ –¢—ã –ø–æ–ª—É—á–∏—à—å 50% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏!\n\n"
        text += f"üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {self.SUBSCRIPTION_PRICE * self.COMMISSION_RATE:.2f} ‚ÇΩ\n"
        text += f"üíé –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: {self.SUBSCRIPTION_PRICE} ‚ÇΩ\n\n"
        text += "üéØ –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏–≤–µ–¥–µ—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å!\n"
        text += "üí° –†–µ—Ñ–µ—Ä–∞–ª—ã –º–æ–≥—É—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π - –∏ —Ç—ã —Ç–æ–∂–µ –ø–æ–ª—É—á–∏—à—å –∫–æ–º–∏—Å—Å–∏—é!"
        
        return text
    
    async def process_referral_registration(self, referred_id: int, referrer_id: int) -> bool:
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –∏–º–µ–µ—Ç —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
            if await has_referrer(referred_id):
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Å–∞–º —Å–µ–±—è
            if referred_id == referrer_id:
                return False
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª
            success = await process_referral(referred_id, referrer_id)
            
            if success:
                bot_logger.log_info(f"Referral processed: {referrer_id} -> {referred_id}")
            
            return success
        except Exception as e:
            bot_logger.log_system_error(e, f"Failed to process referral: {referrer_id} -> {referred_id}")
            return False
    
    async def process_subscription_purchase(self, user_id: int) -> Optional[int]:
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤–µ—Ä–Ω—É—Ç—å ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã –∫–æ–º–∏—Å—Å–∏–∏"""
        try:
            referrer_id = await process_subscription_referral(user_id)
            
            if referrer_id:
                commission = self.SUBSCRIPTION_PRICE * self.COMMISSION_RATE
                bot_logger.log_info(f"Commission earned: {referrer_id} earned {commission} ‚ÇΩ from {user_id}")
                
                return referrer_id
            
            return None
        except Exception as e:
            bot_logger.log_system_error(e, f"Failed to process subscription referral for {user_id}")
            return None

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
referral_system = ReferralSystem()
