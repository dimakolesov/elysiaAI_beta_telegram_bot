"""
–ü—Ä–æ—Å—Ç–æ–π webhook —Å–µ—Ä–≤–µ—Ä –¥–ª—è YooMoney
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
"""

import asyncio
import json
from aiohttp import web, web_request
from aiohttp.web import Request, Response
import logging
from yoomoney import payment_manager
from logger import bot_logger

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class WebhookServer:
    """–°–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –æ—Ç YooMoney"""
    
    def __init__(self, port: int = 8080):
        self.port = port
        self.app = web.Application()
        self.setup_routes()
    
    def setup_routes(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤"""
        self.app.router.add_post('/webhook/yoomoney', self.handle_yoomoney_webhook)
        self.app.router.add_get('/health', self.health_check)
    
    async def handle_yoomoney_webhook(self, request: Request) -> Response:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç YooMoney"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            data = await request.json()
            logger.info(f"Received webhook: {json.dumps(data, indent=2)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
            event_type = data.get('event')
            
            if event_type == 'payment.succeeded':
                await self.handle_payment_success(data)
            elif event_type == 'payment.canceled':
                await self.handle_payment_canceled(data)
            else:
                logger.warning(f"Unknown event type: {event_type}")
            
            return web.Response(text="OK", status=200)
            
        except Exception as e:
            logger.error(f"Webhook error: {e}")
            return web.Response(text="Error", status=500)
    
    async def handle_payment_success(self, data: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            payment_id = data.get('object', {}).get('id')
            user_id = data.get('object', {}).get('metadata', {}).get('user_id')
            
            if not payment_id or not user_id:
                logger.error("Missing payment_id or user_id in webhook data")
                return
            
            logger.info(f"Payment succeeded: {payment_id} for user {user_id}")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
            await payment_manager.handle_payment_success(payment_id, int(user_id))
            
        except Exception as e:
            logger.error(f"Error handling payment success: {e}")
    
    async def handle_payment_canceled(self, data: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            payment_id = data.get('object', {}).get('id')
            user_id = data.get('object', {}).get('metadata', {}).get('user_id')
            
            if not payment_id or not user_id:
                logger.error("Missing payment_id or user_id in webhook data")
                return
            
            logger.info(f"Payment canceled: {payment_id} for user {user_id}")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–º–µ–Ω—É –ø–ª–∞—Ç–µ–∂–∞
            await payment_manager.handle_payment_canceled(payment_id, int(user_id))
            
        except Exception as e:
            logger.error(f"Error handling payment cancel: {e}")
    
    async def health_check(self, request: Request) -> Response:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
        return web.Response(text="Webhook server is running", status=200)
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
        runner = web.AppRunner(self.app)
        await runner.setup()
        site = web.TCPSite(runner, 'localhost', self.port)
        await site.start()
        logger.info(f"Webhook server started on http://localhost:{self.port}")
        logger.info(f"Webhook URL: http://localhost:{self.port}/webhook/yoomoney")
        
        # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        try:
            await asyncio.Future()  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        except KeyboardInterrupt:
            logger.info("Shutting down webhook server...")
        finally:
            await runner.cleanup()

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    server = WebhookServer(port=8080)
    await server.start()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è YooMoney...")
    print("üì° Webhook URL: http://localhost:8080/webhook/yoomoney")
    print("üîó –î–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ngrok:")
    print("   ngrok http 8080")
    print("   –ó–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π URL –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö YooMoney")
    print("\n‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
