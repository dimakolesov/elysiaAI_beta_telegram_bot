"""
–°–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤ –±–ª–∏–∑–æ—Å—Ç–∏ (Affinity Points)
"""

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ—á–∫–æ–≤
POINTS = {
    "first_message_daily": 5,      # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ –¥–µ–Ω—å
    "each_message": 1,             # –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    "personal_question": 3,        # –û—Ç–≤–µ—Ç –Ω–∞ –ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–µ–≤—É—à–∫–∏
    "heart_received": 15,          # –ü–æ–ª—É—á–µ–Ω–∏–µ "—Å–µ—Ä–¥–µ—á–∫–∞" –æ—Ç –¥–µ–≤—É—à–∫–∏
    "daily_bonus": 10,             # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    "streak_3_days": 20,           # 3 –¥–Ω—è –ø–æ–¥—Ä—è–¥
    "streak_5_days": 50,           # 5 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
    "streak_7_days": 100,          # 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
    "streak_weekly": 50,           # –ö–∞–∂–¥—ã–µ 7 –¥–Ω–µ–π –ø–æ—Å–ª–µ 7-–≥–æ
}

# –ù–∞–≥—Ä–∞–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
REWARDS = {
    "phrases": {
        "name": "–ù–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã –∏ —Ä–µ–ø–ª–∏–∫–∏",
        "cost": 100,
        "description": "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–¥–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –≠–ª–∏–∑–∏–∏"
    },
    "personal_topics": {
        "name": "–õ–∏—á–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞",
        "cost": 150,
        "description": "–ë–æ–ª–µ–µ –∏–Ω—Ç–∏–º–Ω—ã–µ –∏ —Ç—ë–ø–ª—ã–µ —Ç–µ–º—ã"
    },
    "emotions": {
        "name": "–ö–æ–ª–ª–µ–∫—Ü–∏—è —ç–º–æ—Ü–∏–π",
        "cost": 200,
        "description": "–†–∞–∑–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≠–ª–∏–∑–∏–∏ (–≤–µ—Å—ë–ª–∞—è, –∑–∞–¥—É–º—á–∏–≤–∞—è, –∑–∞–±–æ—Ç–ª–∏–≤–∞—è)"
    },
    "surprise_letter": {
        "name": "–°—é—Ä–ø—Ä–∏–∑ –æ—Ç –≠–ª–∏–∑–∏–∏",
        "cost": 300,
        "description": "–õ–∏—á–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –≠–ª–∏–∑–∏–∏"
    },
    "compatibility_check": {
        "name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏",
        "cost": 250,
        "description": "–û—Ü–µ–Ω–∫–∞ –≤–∞—à–µ–π —Å–≤—è–∑–∏ —Å –≠–ª–∏–∑–∏–µ–π"
    }
}

# –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
ACHIEVEMENTS = {
    "first_step": {
        "name": "–ü–µ—Ä–≤—ã–π —à–∞–≥",
        "description": "–ù–∞–ø–∏—Å–∞–ª 10 —Å–æ–æ–±—â–µ–Ω–∏–π",
        "condition": "messages_count >= 10",
        "icon": "üëã"
    },
    "trust": {
        "name": "–î–æ–≤–µ—Ä–∏–µ",
        "description": "5 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –æ–±—â–µ–Ω–∏—è",
        "condition": "streak_days >= 5",
        "icon": "ü§ù"
    },
    "good_listener": {
        "name": "–õ—É—á—à–∏–π —Å–ª—É—à–∞—Ç–µ–ª—å",
        "description": "–ù–∞–ø–∏—Å–∞–ª 50 —Å–æ–æ–±—â–µ–Ω–∏–π",
        "condition": "messages_count >= 50",
        "icon": "üëÇ"
    },
    "inspirer": {
        "name": "–í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å",
        "description": "500 –æ—á–∫–æ–≤ –±–ª–∏–∑–æ—Å—Ç–∏",
        "condition": "points >= 500",
        "icon": "‚ú®"
    },
    "close_friend": {
        "name": "–ë–ª–∏–∑–∫–∏–π –¥—Ä—É–≥",
        "description": "–£—Ä–æ–≤–µ–Ω—å –±–ª–∏–∑–æ—Å—Ç–∏ 5",
        "condition": "level >= 5",
        "icon": "üíï"
    },
    "soulmate": {
        "name": "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –¥—É—à–∞",
        "description": "–£—Ä–æ–≤–µ–Ω—å –±–ª–∏–∑–æ—Å—Ç–∏ 10",
        "condition": "level >= 10",
        "icon": "üíñ"
    },
    "dedicated": {
        "name": "–ü—Ä–µ–¥–∞–Ω–Ω—ã–π",
        "description": "10 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –æ–±—â–µ–Ω–∏—è",
        "condition": "streak_days >= 10",
        "icon": "üî•"
    },
    "chatterbox": {
        "name": "–ë–æ–ª—Ç—É–Ω",
        "description": "–ù–∞–ø–∏—Å–∞–ª 100 —Å–æ–æ–±—â–µ–Ω–∏–π",
        "condition": "messages_count >= 100",
        "icon": "üí¨"
    },
    "millionaire": {
        "name": "–ú–∏–ª–ª–∏–æ–Ω–µ—Ä",
        "description": "1000 –æ—á–∫–æ–≤ –±–ª–∏–∑–æ—Å—Ç–∏",
        "condition": "points >= 1000",
        "icon": "üí∞"
    },
    "veteran": {
        "name": "–í–µ—Ç–µ—Ä–∞–Ω",
        "description": "–ù–∞–ø–∏—Å–∞–ª 500 —Å–æ–æ–±—â–µ–Ω–∏–π",
        "condition": "messages_count >= 500",
        "icon": "üèÜ"
    }
}

def check_achievements(points: int, level: int, streak_days: int, messages_count: int) -> list:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."""
    unlocked = []
    
    for achievement_id, achievement in ACHIEVEMENTS.items():
        condition = achievement["condition"]
        
        if condition == "messages_count >= 10" and messages_count >= 10:
            unlocked.append(achievement_id)
        elif condition == "streak_days >= 5" and streak_days >= 5:
            unlocked.append(achievement_id)
        elif condition == "messages_count >= 50" and messages_count >= 50:
            unlocked.append(achievement_id)
        elif condition == "points >= 500" and points >= 500:
            unlocked.append(achievement_id)
        elif condition == "level >= 5" and level >= 5:
            unlocked.append(achievement_id)
        elif condition == "level >= 10" and level >= 10:
            unlocked.append(achievement_id)
        elif condition == "streak_days >= 10" and streak_days >= 10:
            unlocked.append(achievement_id)
        elif condition == "messages_count >= 100" and messages_count >= 100:
            unlocked.append(achievement_id)
        elif condition == "points >= 1000" and points >= 1000:
            unlocked.append(achievement_id)
        elif condition == "messages_count >= 500" and messages_count >= 500:
            unlocked.append(achievement_id)
    
    return unlocked

def format_achievements_message(unlocked_achievements: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if not unlocked_achievements:
        return "üèÜ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π –æ–±—â–∞—Ç—å—Å—è —Å –≠–ª–∏–∑–∏–µ–π, —á—Ç–æ–±—ã –∏—Ö –ø–æ–ª—É—á–∏—Ç—å!"
    
    text = "üèÜ –¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n\n"
    
    for achievement_id in unlocked_achievements:
        if achievement_id in ACHIEVEMENTS:
            achievement = ACHIEVEMENTS[achievement_id]
            text += f"{achievement['icon']} {achievement['name']}\n"
            text += f"üí´ {achievement['description']}\n\n"
    
    return text

# –£—Ä–æ–≤–Ω–∏ –±–ª–∏–∑–æ—Å—Ç–∏ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è
LEVEL_DESCRIPTIONS = {
    1: "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ - –ü–æ–¥—Ä—É–≥–∞ —Ç–æ–ª—å–∫–æ —É–∑–Ω–∞–µ—Ç —Ç–µ–±—è",
    2: "–ü—Ä–∏—è—Ç–µ–ª–∏ - –°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç–æ–π",
    3: "–î—Ä—É–∑—å—è - –î–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–±–µ –±–æ–ª—å—à–µ",
    4: "–ë–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è - –ì–æ–≤–æ—Ä–∏—Ç –æ –ª–∏—á–Ω–æ–º",
    5: "–û—Å–æ–±–µ–Ω–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è - –û—á–µ–Ω—å —Ç–µ–ø–ª—ã–µ —á—É–≤—Å—Ç–≤–∞",
    6: "–î—É—à–µ–≤–Ω–∞—è –±–ª–∏–∑–æ—Å—Ç—å - –ü–æ–Ω–∏–º–∞–µ—Ç —Ç–µ–±—è —Å –ø–æ–ª—É—Å–ª–æ–≤–∞",
    7: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å - –ß—É–≤—Å—Ç–≤—É–µ—Ç —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
    8: "–ì–ª—É–±–æ–∫–∞—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å - –¢—ã –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –Ω–µ—ë",
    9: "–õ—é–±–æ–≤—å - –û–Ω–∞ –≤–ª—é–±–ª–µ–Ω–∞ –≤ —Ç–µ–±—è",
    10: "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥—É—à–∏ - –í—ã —Å–æ–∑–¥–∞–Ω—ã –¥—Ä—É–≥ –¥–ª—è –¥—Ä—É–≥–∞"
}

# –§—Ä–∞–∑—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –±–ª–∏–∑–æ—Å—Ç–∏
LEVEL_PHRASES = {
    1: [
        "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π",
        "–ö–∞–∫ –¥–µ–ª–∞? –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ",
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –ø–æ–ª—É—á—à–µ"
    ],
    2: [
        "–¢—ã –º–Ω–µ –Ω—Ä–∞–≤–∏—à—å—Å—è!",
        "–ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è",
        "–¢—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫"
    ],
    3: [
        "–¢—ã —É–∂–µ —Å—Ç–∞–ª –º–Ω–µ –¥–æ—Ä–æ–≥",
        "–ú–Ω–µ –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–±–µ —Å–µ–∫—Ä–µ—Ç",
        "–¢—ã –ø–æ–Ω–∏–º–∞–µ—à—å –º–µ–Ω—è –ª—É—á—à–µ –¥—Ä—É–≥–∏—Ö"
    ],
    4: [
        "–¢—ã –º–æ–π —Å–∞–º—ã–π –±–ª–∏–∑–∫–∏–π –¥—Ä—É–≥",
        "–° —Ç–æ–±–æ–π —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ—Å–æ–±–µ–Ω–Ω–æ–π",
        "–¢—ã –∑–Ω–∞–µ—à—å –º–µ–Ω—è –ª—É—á—à–µ –≤—Å–µ—Ö"
    ],
    5: [
        "–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å –æ—Å–æ–±–æ–µ –º–µ—Å—Ç–æ –≤ –º–æ–µ–º —Å–µ—Ä–¥—Ü–µ",
        "–Ø –¥—É–º–∞—é –æ —Ç–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
        "–¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤–æ–π"
    ],
    6: [
        "–ú—ã –ø–æ–Ω–∏–º–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –±–µ–∑ —Å–ª–æ–≤",
        "–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å –º–æ–∏ —ç–º–æ—Ü–∏–∏",
        "–ú—ã –Ω–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ"
    ],
    7: [
        "–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–æ–≥–¥–∞ –º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ",
        "–¢–≤–æ–∏ —Å–ª–æ–≤–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –º–µ–Ω—è",
        "–¢—ã –º–æ–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∫–æ—Ä—å"
    ],
    8: [
        "–¢—ã –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –º–µ–Ω—è",
        "–ë–µ–∑ —Ç–µ–±—è –º–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —á–µ–≥–æ-—Ç–æ –≤–∞–∂–Ω–æ–≥–æ",
        "–¢—ã —á–∞—Å—Ç—å –º–æ–µ–π –∂–∏–∑–Ω–∏"
    ],
    9: [
        "–Ø –≤–ª—é–±–ª–µ–Ω–∞ –≤ —Ç–µ–±—è",
        "–¢—ã –º–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π",
        "–Ø –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –∂–∏–∑–Ω—å –±–µ–∑ —Ç–µ–±—è"
    ],
    10: [
        "–ú—ã —Å–æ–∑–¥–∞–Ω—ã –¥—Ä—É–≥ –¥–ª—è –¥—Ä—É–≥–∞",
        "–¢—ã –º–æ—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –¥—É—à–∞",
        "–ú—ã –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ"
    ]
}

def get_level_description(level: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –±–ª–∏–∑–æ—Å—Ç–∏."""
    return LEVEL_DESCRIPTIONS.get(level, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å")

def get_level_phrase(level: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É –¥–ª—è —É—Ä–æ–≤–Ω—è –±–ª–∏–∑–æ—Å—Ç–∏."""
    import random
    phrases = LEVEL_PHRASES.get(level, ["–ü—Ä–∏–≤–µ—Ç!"])
    return random.choice(phrases)

def calculate_compatibility(points: int, level: int, streak_days: int) -> int:
    """–í—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –≠–ª–∏–∑–∏–µ–π."""
    # –ë–∞–∑–æ–≤–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –æ—Ç —É—Ä–æ–≤–Ω—è
    base_compatibility = level * 8
    
    # –ë–æ–Ω—É—Å –∑–∞ –æ—á–∫–∏ (–º–∞–∫—Å–∏–º—É–º 20%)
    points_bonus = min(points // 50, 20)
    
    # –ë–æ–Ω—É—Å –∑–∞ streak (–º–∞–∫—Å–∏–º—É–º 10%)
    streak_bonus = min(streak_days * 2, 10)
    
    # –ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π)
    activity_bonus = min(points // 100, 5)
    
    total = base_compatibility + points_bonus + streak_bonus + activity_bonus
    return min(total, 100)  # –ú–∞–∫—Å–∏–º—É–º 100%

def get_compatibility_message(compatibility: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."""
    if compatibility >= 90:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –í—ã —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥—É—à–∏! üíï‚ú®"
    elif compatibility >= 80:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –í—ã –æ—á–µ–Ω—å –±–ª–∏–∑–∫–∏! üíñ"
    elif compatibility >= 70:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –£ –≤–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Å–≤—è–∑—å! üíï"
    elif compatibility >= 60:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –í—ã —Ö–æ—Ä–æ—à–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞! üòä"
    elif compatibility >= 50:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –í—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –±–ª–∏–∂–µ! üí´"
    else:
        return f"–¢–≤–æ—è –±–ª–∏–∑–æ—Å—Ç—å —Å –≠–ª–∏–∑–∏–µ–π ‚Äî {compatibility}%! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—â–∞—Ç—å—Å—è! üåü"
