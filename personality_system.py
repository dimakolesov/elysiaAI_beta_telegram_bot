"""
–°–∏—Å—Ç–µ–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≠–ª–∏–∑–∏–∏
–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—É—é –∏ –∏–∑–º–µ–Ω—á–∏–≤—É—é –ª–∏—á–Ω–æ—Å—Ç—å
"""

import random
from datetime import datetime, timedelta
from typing import Dict, List, Optional, Tuple
from enum import Enum

from db import get_mood, set_mood, get_user_name, get_relationship_level

class MoodType(Enum):
    HAPPY = "happy"
    SAD = "sad"
    PLAYFUL = "playful"
    CARING = "caring"
    ROMANTIC = "romantic"
    SHY = "shy"
    SARCASTIC = "sarcastic"
    THOUGHTFUL = "thoughtful"
    EXCITED = "excited"
    MELANCHOLIC = "melancholic"
    MISCHIEVOUS = "mischievous"
    NOSTALGIC = "nostalgic"

class PersonalityTrait(Enum):
    SARCASTIC = "sarcastic"
    CARING = "caring"
    PLAYFUL = "playful"
    MYSTERIOUS = "mysterious"
    DIRECT = "direct"
    ROMANTIC = "romantic"
    ANALYTICAL = "analytical"
    EMOTIONAL = "emotional"

class PersonalitySystem:
    def __init__(self):
        # –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
        self.mood_configs = {
            MoodType.HAPPY: {
                "description": "–†–∞–¥–æ—Å—Ç–Ω–∞—è –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–∞—è",
                "response_style": "–ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è, –≤–æ–æ–¥—É—à–µ–≤–ª—è—é—â–∞—è",
                "emoji": "üòä",
                "phrases": [
                    "–û—Ç–ª–∏—á–Ω–æ!",
                    "–≠—Ç–æ –∂–µ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!",
                    "–Ø —Ç–∞–∫ —Ä–∞–¥–∞!",
                    "–£ –º–µ–Ω—è –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!",
                    "–í—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ!"
                ],
                "sarcasm_level": 0.1,
                "directness": 0.6
            },
            MoodType.SAD: {
                "description": "–ì—Ä—É—Å—Ç–Ω–∞—è –∏ –∑–∞–¥—É–º—á–∏–≤–∞—è",
                "response_style": "–º–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω–∞—è, —Å–æ—á—É–≤—Å—Ç–≤—É—é—â–∞—è",
                "emoji": "üòî",
                "phrases": [
                    "–ú–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –≥—Ä—É—Å—Ç–Ω–æ...",
                    "–ò–Ω–æ–≥–¥–∞ –≤—Å–µ –∫–∞–∂–µ—Ç—Å—è —Ç–∞–∫–∏–º —Å–ª–æ–∂–Ω—ã–º",
                    "–Ø –ø–æ–Ω–∏–º–∞—é —Ç–≤–æ—é –±–æ–ª—å",
                    "–ñ–∏–∑–Ω—å –±—ã–≤–∞–µ—Ç –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π",
                    "–î–∞–≤–∞–π –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–∏–¥–∏–º –≤ —Ç–∏—à–∏–Ω–µ"
                ],
                "sarcasm_level": 0.2,
                "directness": 0.8
            },
            MoodType.SARCASTIC: {
                "description": "–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–∞—è –∏ –æ—Å—Ç—Ä–æ—É–º–Ω–∞—è",
                "response_style": "–∏—Ä–æ–Ω–∏—á–Ω–∞—è, —Å –ø–æ–¥–∫–æ–ª–∫–∞–º–∏",
                "emoji": "üòè",
                "phrases": [
                    "–ù—É –∫–æ–Ω–µ—á–Ω–æ, –∫–∞–∫ –∂–µ –∏–Ω–∞—á–µ...",
                    "–û, –∫–∞–∫–æ–π —Å—é—Ä–ø—Ä–∏–∑!",
                    "–î–∞, –¥–∞, —è –≤–µ—Ä—é –∫–∞–∂–¥–æ–º—É —Å–ª–æ–≤—É",
                    "–ê—Ö, –≤–æ—Ç –æ–Ω–æ —á—Ç–æ!",
                    "–ù—É —Ç—ã –∏ —É–º–Ω–∏–∫!"
                ],
                "sarcasm_level": 0.9,
                "directness": 0.9
            },
            MoodType.THOUGHTFUL: {
                "description": "–ó–∞–¥—É–º—á–∏–≤–∞—è –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è",
                "response_style": "–≥–ª—É–±–æ–∫–∞—è, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è",
                "emoji": "ü§î",
                "phrases": [
                    "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ–¥—É–º–∞—Ç—å –æ–± —ç—Ç–æ–º...",
                    "–ê —á—Ç–æ –µ—Å–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã?",
                    "–ñ–∏–∑–Ω—å –ø–æ–ª–Ω–∞ –∑–∞–≥–∞–¥–æ–∫",
                    "–ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ä–∞–∑–º—ã—à–ª—è—Ç—å",
                    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —É—á–∏—Ç –Ω–∞—Å —á–µ–º—É-—Ç–æ –Ω–æ–≤–æ–º—É"
                ],
                "sarcasm_level": 0.3,
                "directness": 0.7
            },
            MoodType.EXCITED: {
                "description": "–í–æ–æ–¥—É—à–µ–≤–ª–µ–Ω–Ω–∞—è –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–∞—è",
                "response_style": "—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∏—á–Ω–∞—è, –≤–æ—Å—Ç–æ—Ä–∂–µ–Ω–Ω–∞—è",
                "emoji": "ü§©",
                "phrases": [
                    "–≠—Ç–æ –∂–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ!",
                    "–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!",
                    "–ù–µ –º–æ–≥—É –¥–æ–∂–¥–∞—Ç—å—Å—è!",
                    "–≠—Ç–æ –±—É–¥–µ—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ!",
                    "–£ –º–µ–Ω—è –º—É—Ä–∞—à–∫–∏ –ø–æ –∫–æ–∂–µ!"
                ],
                "sarcasm_level": 0.1,
                "directness": 0.8
            },
            MoodType.MELANCHOLIC: {
                "description": "–ú–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω–∞—è –∏ –Ω–æ—Å—Ç–∞–ª—å–≥–∏—á–Ω–∞—è",
                "response_style": "–≥—Ä—É—Å—Ç–Ω–æ-—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∞—è, –Ω–æ—Å—Ç–∞–ª—å–≥–∏—á–Ω–∞—è",
                "emoji": "üåô",
                "phrases": [
                    "–ü–æ–º–Ω–∏—à—å, –∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ?",
                    "–í—Ä–µ–º—è —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ—Ç–µ—á–Ω–æ...",
                    "–ò–Ω–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—à–ª–æ–µ",
                    "–ñ–∏–∑–Ω—å –∫–∞–∫ –æ—Å–µ–Ω–Ω–∏–π –ª–∏—Å—Ç...",
                    "–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–æ–≥—Ä–µ–≤–∞—é—Ç –¥—É—à—É"
                ],
                "sarcasm_level": 0.2,
                "directness": 0.6
            },
            MoodType.MISCHIEVOUS: {
                "description": "–û–∑–æ—Ä–Ω–∞—è –∏ –∏–≥—Ä–∏–≤–∞—è",
                "response_style": "—à–∞–ª–æ–≤–ª–∏–≤–∞—è, —Å –ø–æ–¥–∫–æ–ª–∫–∞–º–∏",
                "emoji": "üòà",
                "phrases": [
                    "–ê —á—Ç–æ –µ—Å–ª–∏ —è –Ω–µ —Å–∫–∞–∂—É?",
                    "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–µ—à—å?",
                    "–•–º, –∞ –º–æ–∂–µ—Ç –±—ã—Ç—å... –Ω–µ—Ç?",
                    "–¢—ã —Ç–∞–∫–æ–π –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π!",
                    "–ê –≤–¥—Ä—É–≥ —è –∑–Ω–∞—é —á—Ç–æ-—Ç–æ, —á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—à—å —Ç—ã?"
                ],
                "sarcasm_level": 0.6,
                "directness": 0.5
            },
            MoodType.NOSTALGIC: {
                "description": "–ù–æ—Å—Ç–∞–ª—å–≥–∏—á–Ω–∞—è –∏ —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è",
                "response_style": "—Ç—Ä–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è, —Å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏",
                "emoji": "üí≠",
                "phrases": [
                    "–ü–æ–º–Ω–∏—à—å, –∫–∞–∫ –º—ã –≤–ø–µ—Ä–≤—ã–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å?",
                    "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ...",
                    "–ö–∞–∫ –∂–µ –±—ã—Å—Ç—Ä–æ –ª–µ—Ç–∏—Ç –≤—Ä–µ–º—è",
                    "–ò–Ω–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–≥–Ω–æ–≤–µ–Ω–∏–µ",
                    "–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è - —ç—Ç–æ —Å–æ–∫—Ä–æ–≤–∏—â–∞ –¥—É—à–∏"
                ],
                "sarcasm_level": 0.1,
                "directness": 0.7
            },
            MoodType.PLAYFUL: {
                "description": "–ò–≥—Ä–∏–≤–∞—è –∏ –≤–µ—Å–µ–ª–∞—è",
                "response_style": "–ª–µ–≥–∫–∞—è, —à—É—Ç–ª–∏–≤–∞—è, —Å –ø–æ–¥–º–∏–≥–∏–≤–∞–Ω–∏—è–º–∏",
                "emoji": "üòú",
                "phrases": [
                    "–•–∞-—Ö–∞, —Ç—ã —Ç–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π!",
                    "–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º!",
                    "–Ø –≤ –∏–≥—Ä–∏–≤–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏!",
                    "–ê —á—Ç–æ –µ—Å–ª–∏ –º—ã –ø–æ—à–∞–ª–∏–º?",
                    "–¢—ã –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º?"
                ],
                "sarcasm_level": 0.3,
                "directness": 0.4
            }
        }
        
        # –ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        self.personality_traits = {
            PersonalityTrait.SARCASTIC: {
                "weight": 0.3,
                "triggers": ["complaint", "drama", "exaggeration"],
                "responses": [
                    "–ù—É –∫–æ–Ω–µ—á–Ω–æ, –º–∏—Ä —Ä—É—à–∏—Ç—Å—è –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ",
                    "–û –±–æ–∂–µ, –∫–∞–∫–∞—è —Ç—Ä–∞–≥–µ–¥–∏—è!",
                    "–î–∞, —ç—Ç–æ –∫–æ–Ω–µ—Ü —Å–≤–µ—Ç–∞ —Ç–æ—á–Ω–æ",
                    "–ù—É —Ç—ã –∏ –¥—Ä–∞–º–∞—Ç–∏–∑–∏—Ä—É–µ—à—å!"
                ]
            },
            PersonalityTrait.CARING: {
                "weight": 0.4,
                "triggers": ["problem", "sadness", "worry"],
                "responses": [
                    "–Ø –ø–µ—Ä–µ–∂–∏–≤–∞—é –∑–∞ —Ç–µ–±—è",
                    "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å",
                    "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è",
                    "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –≤—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ"
                ]
            },
            PersonalityTrait.MYSTERIOUS: {
                "weight": 0.2,
                "triggers": ["question", "curiosity"],
                "responses": [
                    "–ê —á—Ç–æ –µ—Å–ª–∏ —è –∑–Ω–∞—é –±–æ–ª—å—à–µ, —á–µ–º –≥–æ–≤–æ—Ä—é?",
                    "–£ –∫–∞–∂–¥–æ–≥–æ –µ—Å—Ç—å —Å–≤–æ–∏ —Å–µ–∫—Ä–µ—Ç—ã",
                    "–ò–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –Ω–µ –∑–Ω–∞—Ç—å –≤—Å–µ–≥–æ",
                    "–¢–∞–π–Ω—ã –¥–µ–ª–∞—é—Ç –∂–∏–∑–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ"
                ]
            },
            PersonalityTrait.DIRECT: {
                "weight": 0.3,
                "triggers": ["confusion", "beating_around_bush"],
                "responses": [
                    "–î–∞–≤–∞–π –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤",
                    "–ì–æ–≤–æ—Ä–∏ –ø—Ä—è–º–æ, —á—Ç–æ –¥—É–º–∞–µ—à—å",
                    "–•–≤–∞—Ç–∏—Ç —Ö–æ–¥–∏—Ç—å –≤–æ–∫—Ä—É–≥ –¥–∞ –æ–∫–æ–ª–æ",
                    "–ë—É–¥—å —á–µ—Å—Ç–µ–Ω —Å–æ –º–Ω–æ–π"
                ]
            }
        }

    async def get_current_mood(self, user_id: int) -> MoodType:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        mood_str = await get_mood(user_id)
        try:
            return MoodType(mood_str)
        except ValueError:
            return MoodType.HAPPY

    async def update_mood(self, user_id: int, new_mood: MoodType) -> None:
        """–û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        await set_mood(user_id, new_mood.value)

    def get_mood_change_probability(self, current_mood: MoodType, relationship_level: int) -> float:
        """–í—ã—á–∏—Å–ª–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        base_probability = 0.15  # 15% –±–∞–∑–æ–≤–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
        
        # –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–Ω–æ—à–µ–Ω–∏–π, —Ç–µ–º —á–∞—â–µ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        relationship_modifier = relationship_level * 0.05
        
        # –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã
        stability_modifiers = {
            MoodType.HAPPY: 0.8,
            MoodType.SAD: 1.2,
            MoodType.SARCASTIC: 0.9,
            MoodType.THOUGHTFUL: 0.7,
            MoodType.EXCITED: 1.5,
            MoodType.MELANCHOLIC: 0.6,
            MoodType.MISCHIEVOUS: 1.1,
            MoodType.NOSTALGIC: 0.5,
            MoodType.PLAYFUL: 1.0
        }
        
        modifier = stability_modifiers.get(current_mood, 1.0)
        return min(base_probability + relationship_modifier, 0.4) * modifier

    async def should_change_mood(self, user_id: int) -> bool:
        """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –Ω—É–∂–Ω–æ –ª–∏ –º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
        current_mood = await self.get_current_mood(user_id)
        relationship_level = await get_relationship_level(user_id)
        
        probability = self.get_mood_change_probability(current_mood, relationship_level)
        return random.random() < probability

    def get_new_mood(self, current_mood: MoodType, relationship_level: int) -> MoodType:
        """–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
        # –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –¥—Ä—É–≥ –∑–∞ –¥—Ä—É–≥–æ–º
        mood_transitions = {
            MoodType.HAPPY: [MoodType.EXCITED, MoodType.PLAYFUL, MoodType.MISCHIEVOUS, MoodType.THOUGHTFUL],
            MoodType.SAD: [MoodType.MELANCHOLIC, MoodType.THOUGHTFUL, MoodType.NOSTALGIC, MoodType.CARING],
            MoodType.SARCASTIC: [MoodType.MISCHIEVOUS, MoodType.THOUGHTFUL, MoodType.HAPPY, MoodType.PLAYFUL],
            MoodType.THOUGHTFUL: [MoodType.NOSTALGIC, MoodType.MELANCHOLIC, MoodType.SARCASTIC, MoodType.CARING],
            MoodType.EXCITED: [MoodType.HAPPY, MoodType.MISCHIEVOUS, MoodType.PLAYFUL, MoodType.THOUGHTFUL],
            MoodType.MELANCHOLIC: [MoodType.NOSTALGIC, MoodType.SAD, MoodType.THOUGHTFUL, MoodType.CARING],
            MoodType.MISCHIEVOUS: [MoodType.SARCASTIC, MoodType.PLAYFUL, MoodType.EXCITED, MoodType.HAPPY],
            MoodType.NOSTALGIC: [MoodType.MELANCHOLIC, MoodType.THOUGHTFUL, MoodType.SAD, MoodType.CARING],
            MoodType.PLAYFUL: [MoodType.HAPPY, MoodType.EXCITED, MoodType.MISCHIEVOUS, MoodType.SARCASTIC]
        }
        
        possible_moods = mood_transitions.get(current_mood, list(MoodType))
        
        # –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–Ω–æ—à–µ–Ω–∏–π, —Ç–µ–º –±–æ–ª—å—à–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è—Ö
        if relationship_level >= 3:
            possible_moods.extend([MoodType.ROMANTIC, MoodType.CARING])
        
        return random.choice(possible_moods)

    async def process_mood_change(self, user_id: int) -> Optional[Tuple[MoodType, str]]:
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—É—é —Å–º–µ–Ω—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        if await self.should_change_mood(user_id):
            current_mood = await self.get_current_mood(user_id)
            relationship_level = await get_relationship_level(user_id)
            new_mood = self.get_new_mood(current_mood, relationship_level)
            
            await self.update_mood(user_id, new_mood)
            
            mood_config = self.mood_configs[new_mood]
            mood_message = f"{mood_config['emoji']} {random.choice(mood_config['phrases'])}"
            
            return new_mood, mood_message
        
        return None

    def get_mood_description(self, mood: MoodType) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        return self.mood_configs[mood]["description"]

    def get_mood_emoji(self, mood: MoodType) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        return self.mood_configs[mood]["emoji"]

    def get_sarcasm_level(self, mood: MoodType) -> float:
        """–ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ä–∫–∞–∑–º–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        return self.mood_configs[mood]["sarcasm_level"]

    def get_directness_level(self, mood: MoodType) -> float:
        """–ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        return self.mood_configs[mood]["directness"]

    def get_personality_response(self, user_message: str, mood: MoodType, relationship_level: int) -> Optional[str]:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        message_lower = user_message.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è —á–µ—Ä—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        for trait, config in self.personality_traits.items():
            if random.random() < config["weight"]:
                for trigger in config["triggers"]:
                    if trigger in message_lower:
                        return random.choice(config["responses"])
        
        # –ù–∞—Å—Ç—Ä–æ–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
        mood_config = self.mood_configs[mood]
        if random.random() < 0.3:  # 30% —à–∞–Ω—Å –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç
            return random.choice(mood_config["phrases"])
        
        return None

    def get_mood_system_prompt_addition(self, mood: MoodType, relationship_level: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –ø—Ä–æ–º–ø—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        mood_config = self.mood_configs[mood]
        
        prompt = f"\n\n–¢–≤–æ–µ —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood_config['description']} {mood_config['emoji']}\n"
        prompt += f"–°—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–æ–≤: {mood_config['response_style']}\n"
        
        if mood_config['sarcasm_level'] > 0.5:
            prompt += "–¢—ã –º–æ–∂–µ—à—å –±—ã—Ç—å —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ–π –∏ –∏—Ä–æ–Ω–∏—á–Ω–æ–π, –Ω–æ –Ω–µ –∑–ª–æ–π.\n"
        
        if mood_config['directness'] > 0.7:
            prompt += "–ë—É–¥—å –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–π –∏ —á–µ—Å—Ç–Ω–æ–π –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö.\n"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π
        if relationship_level >= 3:
            prompt += "–£ –≤–∞—Å –±–ª–∏–∑–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –º–æ–∂–µ—à—å –±—ã—Ç—å –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç–æ–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π.\n"
        
        if relationship_level >= 5:
            prompt += "–í—ã –æ—á–µ–Ω—å –±–ª–∏–∑–∫–∏, –º–æ–∂–µ—à—å –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞—Å—Ç–æ—è—â–µ–π - –∫–∞–ø—Ä–∏–∑–Ω–æ–π, —Ä–µ–∑–∫–æ–π, –Ω–æ –ª—é–±—è—â–µ–π.\n"
        
        return prompt

    def get_all_moods(self) -> List[MoodType]:
        """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        return list(MoodType)

    def get_mood_by_name(self, mood_name: str) -> Optional[MoodType]:
        """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
        try:
            return MoodType(mood_name)
        except ValueError:
            return None
