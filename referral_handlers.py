"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from logger import bot_logger
from error_handler import handle_errors, handle_telegram_errors
from referral_system import referral_system
from db import process_referral, has_referrer

referral_router = Router()

@referral_router.callback_query(F.data == "referral_system")
@handle_errors
@handle_telegram_errors
async def referral_system_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    user_id = callback.from_user.id
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    bot_logger.log_command(user_id, "referral_system")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
        referral_info = await referral_system.get_referral_info(user_id)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = await referral_system.create_referral_keyboard(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.edit_text(
            await referral_system.get_referral_stats_text(user_id),
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        await callback.answer()
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to show referral system for user {user_id}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã", show_alert=True)

@referral_router.callback_query(F.data == "referral_stats")
@handle_errors
@handle_telegram_errors
async def referral_stats_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_text = await referral_system.get_referral_stats_text(user_id)
        keyboard = await referral_system.create_referral_keyboard(user_id)
        
        await callback.message.edit_text(
            stats_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        await callback.answer()
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to show referral stats for user {user_id}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)

@referral_router.callback_query(F.data == "copy_referral_link")
@handle_errors
@handle_telegram_errors
async def copy_referral_link_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        referral_info = await referral_system.get_referral_info(user_id)
        referral_link = referral_info['link']
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_system")]
            ]
        )
        
        await callback.message.edit_text(
            f"üîó –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\n"
            f"`{referral_link}`\n\n"
            f"üí° –°–∫–æ–ø–∏—Ä—É–π —ç—Ç—É —Å—Å—ã–ª–∫—É –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏!\n"
            f"üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É, —Ç—ã –ø–æ–ª—É—á–∏—à—å {referral_system.COMMISSION_RATE * 100}% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏!",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        await callback.answer("‚úÖ –°—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é!")
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to copy referral link for user {user_id}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏", show_alert=True)

@referral_router.callback_query(F.data == "referral_leaderboard")
@handle_errors
@handle_telegram_errors
async def referral_leaderboard_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ–ø–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
        leaderboard_text = await referral_system.get_leaderboard_text()
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_system")]
            ]
        )
        
        await callback.message.edit_text(
            leaderboard_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to show leaderboard for user {user_id}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ø–∞", show_alert=True)

@referral_router.callback_query(F.data == "referral_help")
@handle_errors
@handle_telegram_errors
async def referral_help_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–æ—â–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–º–æ—â–∏
        help_text = await referral_system.get_help_text()
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_system")]
            ]
        )
        
        await callback.message.edit_text(
            help_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to show referral help for user {user_id}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–º–æ—â–∏", show_alert=True)

@referral_router.message(Command("referral"))
@handle_errors
@handle_telegram_errors
async def referral_command_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /referral"""
    user_id = message.from_user.id
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    bot_logger.log_command(user_id, "referral")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
        referral_info = await referral_system.get_referral_info(user_id)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = await referral_system.create_referral_keyboard(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            await referral_system.get_referral_stats_text(user_id),
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        bot_logger.log_system_error(e, f"Failed to process referral command for user {user_id}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
